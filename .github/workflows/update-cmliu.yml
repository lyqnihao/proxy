# 版本：1.1
# 修订原因：
# - 修复 git diff 检测逻辑，改为检查暂存区变更
# - 修复弃用的 ::set-output 语法，改用 $GITHUB_OUTPUT
# - 优化文件操作流程，移除冗余删除步骤
# - 备注：无法用自有域名地址！！！
# 版本：1.0
# 功能：每天自动更新 Cloudflare 自建汇聚订阅 YAML 文件
# 核心流程：动态生成 URL → 下载文件 → 检测变更 → 提交推送 → 邮件通知

# 工作流名称
name: Update cmliu

# 触发条件
on:
  # 仅手动触发（原定时触发已移除）
  workflow_dispatch:

# 任务定义
jobs:
  # 任务名称：更新汇聚订阅文件
  update-cmliu-yaml:
    # 运行环境：最新版 Ubuntu
    runs-on: ubuntu-latest

    # 步骤序列
    steps:
      # --------------------------
      # 步骤 1：检出代码库
      # --------------------------
      - name: Checkout repository
        uses: actions/checkout@v3  # 使用 checkout v3 版本

      # --------------------------
      # 步骤 2：获取北京时间
      # --------------------------
      - name: Get current date (Beijing Time)
        id: date
        run: |
          # 设置环境变量（用于后续步骤和邮件通知）
          echo "YEAR=$(TZ='Asia/Shanghai' date +'%Y')" >> $GITHUB_ENV
          echo "MONTH=$(TZ='Asia/Shanghai' date +'%m')" >> $GITHUB_ENV
          echo "DAY=$(TZ='Asia/Shanghai' date +'%d')" >> $GITHUB_ENV
          echo "CURRENT_DATE=$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      # --------------------------
      # 步骤 3：生成动态 URL
      # --------------------------
      - name: Generate dynamic URL
        run: |
          # 固定 URL（可根据需要改造为动态生成逻辑）
          echo "DYNAMIC_URL=https://proxymix.lyqnihao.dns-dynamic.net/sub?token=guest&clash" >> $GITHUB_ENV

      # --------------------------
      # 步骤 4：创建存储目录
      # --------------------------
      - name: Create cmliu directory if not exists
        run: |
          # -p 参数确保目录不存在时自动创建
          mkdir -p cmliu

      # --------------------------
      # 步骤 5：下载订阅文件（核心步骤）
      # --------------------------
      - name: Fetch content from dynamic URL
        id: fetch-content
        run: |
          # 使用 curl 下载文件
          if curl -o cmliu/target.yaml "$DYNAMIC_URL"; then
            # 检查文件是否为空
            if [ -s cmliu/target.yaml ]; then
              echo "内容下载成功"
              git add cmliu/target.yaml  # 关键操作：将文件加入暂存区
            else
              # 设置错误标志（新语法替代弃用的 ::set-output）
              echo "FETCH_ERROR=true" >> $GITHUB_OUTPUT
              exit 1
            fi
          else
            echo "FETCH_ERROR=true" >> $GITHUB_OUTPUT
            exit 1
          fi

      # --------------------------
      # 步骤 6：检测文件变更（改进点）
      # --------------------------
      - name: Check if file has changes
        id: check-changes
        run: |
          # 检查暂存区与仓库的差异（原工作区对比不准确）
          if git diff --staged --quiet; then
            echo "HAS_CHANGES=false" >> $GITHUB_OUTPUT
            echo "文件内容未发生变化"
          else
            echo "HAS_CHANGES=true" >> $GITHUB_OUTPUT
            echo "文件内容已发生变化"
          fi

      # --------------------------
      # 步骤 7：提交变更（条件执行）
      # --------------------------
      - name: Commit and push changes
        if: steps.check-changes.outputs.HAS_CHANGES == 'true'
        run: |
          # 配置 Git 身份信息
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # 提交暂存区文件（包含动态时间戳）
          git commit -m "Update cmliu yaml: ${{ env.CURRENT_DATE }}"
          # 使用 GitHub Token 推送
          git push

      # --------------------------
      # 步骤 8：邮件通知（故障处理）
      # --------------------------
      - name: Send email on no changes or failure
        # 触发条件：失败/下载错误/无变化
        if: ${{ failure() || steps.fetch-content.outputs.FETCH_ERROR == 'true' || steps.check-changes.outputs.HAS_CHANGES == 'false' }}
        uses: dawidd6/action-send-mail@v3
        with:
          # SMTP 服务器配置
          server_address: smtp.163.com
          server_port: 465
          # 认证信息（需在仓库 Secrets 设置）
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          # 邮件主题（含北京时间）
          subject: "cmliu汇聚订阅更新出错 ${{ env.CURRENT_DATE }}"
          # 邮件正文模板
          body: |
            工作流运行状态：
            - 脚本版本: 1.1
            - 订阅地址: ${{ env.DYNAMIC_URL }}
            - 日志链接: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            - 错误类型: ${{ steps.fetch-content.outputs.FETCH_ERROR == 'true' && '下载失败' || steps.check-changes.outputs.HAS_CHANGES == 'false' && '内容未变化' || '未知错误' }}
          # 收件人配置
          to: lyqnihao@163.com
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain
