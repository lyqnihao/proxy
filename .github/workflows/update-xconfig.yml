name: Update xConfig

on:
  schedule:
    - cron: '5 16 * * *'
    - cron: '5 4 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 pyyaml

      - name: Get current date (Beijing Time)
        id: date
        run: |
          echo "CURRENT_DATE=$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Fetch data and update output.yaml
        id: fetch-content
        run: |
          import requests
          from bs4 import BeautifulSoup
          import yaml
          import os
          import sys

          url = "https://xconfig.pages.dev/index2"
          try:
              response = requests.get(url)
              response.raise_for_status()
          except requests.exceptions.RequestException as e:
              print(f"请求网页失败: {e}")
              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  print('FETCH_ERROR=true', file=fh)
              sys.exit(1)

          soup = BeautifulSoup(response.text, 'html.parser')
          button = soup.find('button', id='copyButton3-13')
          if not button:
              print("未找到指定的按钮")
              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  print('FETCH_ERROR=true', file=fh)
              sys.exit(1)

          data_link = button.get('data-link')
          if not data_link:
              print("按钮未包含 data-link 属性")
              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  print('FETCH_ERROR=true', file=fh)
              sys.exit(1)

          # 将 data-link 的值输出到 DYNAMIC_URL 环境变量
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              print(f'DYNAMIC_URL={data_link}', file=fh)

          try:
              data_response = requests.get(data_link)
              data_response.raise_for_status()
          except requests.exceptions.RequestException as e:
              print(f"请求 data-link 失败: {e}")
              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  print('FETCH_ERROR=true', file=fh)
              sys.exit(1)

          data_content = data_response.text
          output_dir = "xConfig"
          output_file = os.path.join(output_dir, "output.yaml")

          if not os.path.exists(output_dir):
              os.makedirs(output_dir)

          file_exists = os.path.exists(output_file)
          old_content = ""
          if file_exists:
              with open(output_file, 'r') as file:
                  old_content = file.read()

          if data_content == old_content:
              print("内容无修改，无需更新")
              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  print('HAS_CHANGES=false', file=fh)
              sys.exit(0)

          with open(output_file, 'w') as file:
              yaml.dump({'data': data_content}, file)

          print(f"Updated {output_file} with data from {data_link}")
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              print('HAS_CHANGES=true', file=fh)

      - name: Send email on no changes or failure
        if: ${{ failure() || steps.fetch-content.outputs.FETCH_ERROR == 'true' || steps.fetch-content.outputs.HAS_CHANGES == 'false' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.163.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "xConfig更新出错 ${{ env.CURRENT_DATE }}"
          body: |
            工作流运行状态：
            - 脚本版本: 1.1
            - 动态 URL: ${{ steps.fetch-content.outputs.DYNAMIC_URL }}
            - 日志链接: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            - 状态: ${{ steps.fetch-content.outputs.FETCH_ERROR == 'true' && '动态 URL 无法访问' || steps.fetch-content.outputs.HAS_CHANGES == 'false' && '内容未发生变化，无需更新' || '工作流运行失败' }}
          to: lyqnihao@163.com
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

      - name: Commit and push changes
        if: steps.fetch-content.outputs.HAS_CHANGES == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add xConfig/output.yaml
          git commit -m "Automatically update output.yaml"
          git push
